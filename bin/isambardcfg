#!/usr/bin/env python3

import eventlet
eventlet.monkey_patch()

import argparse
import os
import sys
import resource
import prctl
import signal

prctl.set_name("isambard")
prctl.set_proctitle("isambard "+" ".join(sys.argv[1:]))

sys.path.insert(0, os.path.join(os.path.dirname(__file__), "..") )

from isambard_lib import jsonlib
jsonlib.json_settings()

from isambard_lib import config,common
from isambard_lib import channels,database,server

###

parser = argparse.ArgumentParser(description="Data brocker")
parser.add_argument('--version', action='version', version='%%(prog)s %s' % config.VERSION)

parser.add_argument("-p", "--port", dest="port", 
                    type=int,
                    help="port to bind (default: %s)" % config.PORT, 
                    metavar="PORT")

parser.add_argument("-i", "--host", dest="host", 
                    type=str,
                    help="host to bind (default: %s)" % config.HOST,
                    metavar="IP")

parser.add_argument("-c", "--configuration-file", dest="conf_file", 
                    type=str,
                    help="configuration file (default: %s)" % config.CONFIG_FILE, 
                    metavar="FILE")

parser.add_argument("-D", "--daemon", dest="daemon", action="store_const",const=True,
                    help="run in daemon mode")

parser.add_argument("-S", "--no-daemon", dest="daemon", action="store_const",const=False,
                    help="don't run in daemon mode")

if __name__ == '__main__':
    options=parser.parse_args()
    options.conf_file=os.path.abspath(options.conf_file)
    config.setup_config(options)

    if os.path.exists(config.PID_FILE):
        print("Error: Pid file %s exists. Abort" % config.PID_FILE )
        sys.exit()

    config.setup_log()
    if config.DEBUG:
        common.log("Debug is enabled")

    if config.DAEMON:
        daemon_stdout=open(os.path.join(config.LOG_DIR,"stdout.log"),"w")
        daemon_stderr=open(os.path.join(config.LOG_DIR,"stderr.log"),"w")

        core_resource = resource.RLIMIT_CORE
        resource.getrlimit(core_resource)
        core_limit = (0, 0)
        resource.setrlimit(core_resource, core_limit)

        os.umask(config.UMASK)
        os.chdir(config.WORKING_DIR)
        try:
            os.initgroups(config.USER.pw_name, config.GROUP.gr_gid)
            os.setgid(config.GROUP.gr_gid)	
            os.setuid(config.USER.pw_uid)
        except PermissionError as e:
            print("Warning: You can't change owner: %s" % str(e))

        pid = os.fork()
        if pid > 0:
            os._exit(0)

        os.dup2(os.open(os.devnull, os.O_RDWR), sys.stdin.fileno())
        os.dup2(daemon_stdout.fileno(), sys.stdout.fileno())
        os.dup2(daemon_stderr.fileno(), sys.stderr.fileno())

    with open(config.PID_FILE,"w") as fd:
        fd.write(str(os.getpid()))

    def stop(signum,trace):
        print(signum)
        try:
            os.remove(config.PID_FILE)
        except OSError as e:
            pass
        sys.exit()

    signal.signal(signal.SIGINT,stop)
    signal.signal(signal.SIGTERM,stop)
    signal.signal(signal.SIGQUIT,stop)

    db=database.IsambardDatabase(options.conf_file)
    bus=channels.Bus()
    server=server.IsambardServer(db,bus,
                                 host=config.HOST,
                                 port=config.PORT)
    server.start()


